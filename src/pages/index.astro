---
import Header from "../components/Header.astro";
import Layout from "../layouts/Layout.astro";
---

<Layout title="Welcome to Astro.">
	<main class="min-h-screen pt-5 pb-10 bg-[#eaffee] md:text-justify">
		<h1
			class="cabinetGrotesk-black text-4xl md:text-5xl text-left md:text-center text-[#0f172a] px-5 py-4 md:py-8 lg:py-12 pb-5"
		>
			<strong><em>Explorando Node.js y Express.js</em></strong>
		</h1>
		<section
			class="flex flex-col justify-evenly md:items-center gap-12 px-5"
		>
			<section
				class="flex flex-col md:flex-row justify-evenly md:items-center gap-20 pt-5"
			>
				<figure class="flex justify-center items-center">
					<img
						id="imgNode"
						class="w-44 h-44 md:w-48 md:h-48 lg:w-72 lg:h-72"
						src="../public/img/nodejs-circular.png"
					/>
				</figure>

				<article id="descubriendoNode"
					class="flex flex-col gap-5 md:max-w-md lg:max-w-lg xl:max-w-xl"
				>
					<h1
						class="cabinetGrotesk-black text-4xl text-left text-[#0f172a] md:ml-0"
					>
						<strong><em>Descubriendo Node.js</em></strong>
					</h1>
					<p class="interFont text-lg">
						<em>Node.js</em> no es solo un entorno de ejecución para

						<span class="underline">JavaScript</span> en el lado del
						servidor, es la <strong>clave</strong> para desbloquear
						el potencial <u>ilimitado</u> de tus aplicaciones web. A
						diferencia de la ejecución tradicional en el navegador, <em
							>Node.js</em
						> lleva la <em>magia</em> al servidor, simplificando la
						creación de aplicaciones <strong>escalables</strong> y
						de <strong>alto rendimiento</strong>. Su característica
						estelar radica en la <u>habilidad</u> de manejar <em
							>múltiples conexiones simultáneamente</em
						> a través de un modelo de E/S no bloqueante. En otras
						palabras, puede procesar <span class="underline"
							>numerosas solicitudes</span
						> sin atascar el hilo de ejecución, desencadenando una <strong
							>eficiencia</strong
						> y <strong>velocidad</strong> impresionantes en tus
						aplicaciones.
					</p>
				</article>
			</section>

			<article id="panoramaNode"
				class="flex flex-col gap-5 md:max-w-2xl lg:max-w-3xl xl:max-w-5xl"
			>
				<h1
					class="cabinetGrotesk-black text-4xl text-left md:text-center text-[#0f172a] md:ml-0"
				>
					<strong
						><em>Importancia en el Panorama Web Actual</em></strong
					>
				</h1>
				<p class="interFont text-lg">
					La <strong>importancia</strong> de <em>Node.js</em> en el
					panorama web actual radica en varios aspectos <u>clave</u>:
				</p>
				<ul class="list-disc list-inside text-lg flex flex-col gap-5">
					<li>
						<strong>JavaScript en el Servidor:</strong> Permite a
						los desarrolladores utilizar <span class="underline"
							>JavaScript</span
						> tanto en el lado del cliente como en el servidor,
						simplificando el desarrollo web al utilizar un único
						lenguaje de programación en todo el stack.
					</li>
					<li>
						<strong>Eficiencia y Escalabilidad:</strong> La
						arquitectura no bloqueante de <em>Node.js</em> facilita
						la construcción de aplicaciones altamente eficientes y
						escalables. Puede manejar un gran número de conexiones
						simultáneas, lo que es crucial para aplicaciones web
						modernas con múltiples usuarios.
					</li>
					<li>
						<strong>npm (Node Package Manager):</strong>
						<em>npm</em> es el gestor de paquetes de <em>Node.js</em
						> y es la mayor colección de bibliotecas de código
						abierto del mundo. Facilita la integración de módulos y
						librerías, acelerando el desarrollo de aplicaciones.
					</li>
					<li>
						<strong>Comunidad Activa:</strong>
						<em>Node.js</em> cuenta con una comunidad activa de
						desarrolladores que contribuyen a su mejora continua.
						Esto asegura que esté en constante evolución y se adapte
						a las necesidades cambiantes del desarrollo web.
					</li>
					<li>
						<strong>Adopción Empresarial:</strong> Muchas grandes
						empresas han adoptado <em>Node.js</em> para sus
						servicios de servidor, lo que ha contribuido a su
						crecimiento y consolidación en el panorama empresarial.
						Ejemplos incluyen Netflix, LinkedIn, y PayPal.
					</li>
				</ul>
			</article>

			<article id="historiaNode"
				class="flex flex-col gap-10 md:max-w-2xl lg:max-w-3xl xl:max-w-5xl"
			>
				<h1
					class="cabinetGrotesk-black text-4xl text-left md:text-center text-[#0f172a] md:ml-0"
				>
					<strong><em>Breve Historia de Node.js</em></strong>
				</h1>

				<p class="interFont text-lg">
					<strong>Node.js</strong> fue creado por <strong
						>Ryan Dahl</strong
					> y su desarrollo comenzó en <strong>2009</strong>. La
					motivación principal de Dahl fue superar las limitaciones de
					los modelos de E/S bloqueantes utilizados comúnmente en el
					desarrollo de servidores web. Quería construir un entorno
					que pudiera manejar <u>múltiples conexiones simultáneas</u>
					 de manera eficiente, utilizando el motor V8 de Google
					Chrome para ejecutar <span class="underline"
						>JavaScript fuera del navegador</span
					>.
				</p>

				<p class="interFont text-lg">
					<strong>Empresa que lo Mantiene Actualmente:</strong>
					<strong>Node.js</strong> está actualmente mantenido por la <strong
						>Node.js Foundation</strong
					>, que se formó para supervisar el desarrollo y la evolución
					de la plataforma. En <strong>2019</strong>, la Node.js
					Foundation se fusionó con la JS Foundation para consolidar
					recursos y esfuerzos en la gestión de proyectos de código
					abierto relacionados con JavaScript.
				</p>

				<h2 class="cabinetGrotesk-black text-[#0f172a] text-2xl">
					<strong>Evolución y Hitos en el Desarrollo:</strong>
				</h2>

				<ul class="list-disc list-inside text-lg flex flex-col gap-5">
					<li>
						<strong>2009:</strong> Lanzamiento de la primera versión
						estable de <strong>Node.js</strong>.
					</li>
					<li>
						<strong>2010:</strong> Introducción de <strong
							>npm (Node Package Manager)</strong
						>, que se convirtió en una parte integral del ecosistema
						de <strong>Node.js</strong>.
					</li>
					<li>
						<strong>2011:</strong>
						<strong>Joyent</strong>, la empresa donde trabajaba <strong
							>Ryan Dahl</strong
						>, creó el Comité Asesor Técnico de <strong
							>Node.js</strong
						> para guiar el desarrollo.
					</li>
					<li>
						<strong>2015:</strong> Lanzamiento de <strong
							>Node.js</strong
						> v4.0.0, que incluyó el motor V8 de Google actualizado
						y marcó el comienzo de la convergencia de las variantes
						de <strong>Node.js</strong>.
					</li>
					<li>
						<strong>2019:</strong> La <strong
							>Node.js Foundation</strong
						> se fusiona con la <strong>JS Foundation</strong>,
						formando la <strong>OpenJS Foundation</strong> para
						proporcionar una base sólida para el desarrollo continuo
						de <strong>Node.js</strong>.
					</li>
				</ul>

				<h2 class="cabinetGrotesk-black text-[#0f172a] text-2xl">
					<strong
						>Empresas que lo Usan Actualmente con Datos
						Significativos:</strong
					>
				</h2>

				<ul class="list-disc list-inside text-lg flex flex-col gap-5">
					<li>
						<strong>Netflix:</strong> Migró de servidores clásicos a

						<strong>Node.js</strong> para mejorar la velocidad y la
						escalabilidad de su plataforma de transmisión de video.
					</li>

					<li>
						<strong>LinkedIn:</strong> Utiliza <strong
							>Node.js</strong
						> para mejorar el rendimiento y la eficiencia en el
						manejo de conexiones simultáneas en aplicaciones web.
					</li>

					<li>
						<strong>PayPal:</strong> Adoptó <strong>Node.js</strong>
						 para mejorar la velocidad de desarrollo y la eficiencia
						de sus servicios de pago en línea.
					</li>
				</ul>

				<p class="interFont text-lg">
					Estas empresas han experimentado mejoras significativas en
					el rendimiento y la escalabilidad al adoptar <strong
						>Node.js</strong
					>, lo que demuestra su capacidad para manejar entornos web
					exigentes y su atractivo en el desarrollo de servicios de
					servidor modernos.
				</p>

				<hr class="h-1 bg-black ml-12 mr-12" />
			</article>
		</section>

		<!-- Parte de Express.js -->

		<section
			class="flex flex-col md:flex-row justify-center md:items-center gap-20 px-5 pt-12"
		>
			<figure class="flex justify-center items-center">
				<img
					id="imgExpress"
					class="w-44 h-44 md:w-48 md:h-48 lg:w-72 lg:h-72"
					src="../public/img/express-circular.png"
				/>
			</figure>

			<article id="descubriendoExpress"
				class="flex flex-col gap-12 md:max-w-md lg:max-w-lg xl:max-w-xl"
			>
				<h1
					class="cabinetGrotesk-black text-4xl text-left text-[#0f172a] md:ml-0"
				>
					<strong><em>Descubriendo Express.js</em></strong>
				</h1>

				<p class="interFont text-lg">
					<strong>Express.js</strong> es un marco de aplicación web para <strong
						>Node.js</strong
					> que simplifica el desarrollo de aplicaciones web y APIs
					(Interfaz de Programación de Aplicaciones). Se centra en la
					construcción rápida y eficiente de aplicaciones web utilizando <strong
						>Node.js</strong
					> como entorno de ejecución del lado del servidor.
				</p>
			</article>
		</section>

		<article id="historiaExpress"
			class="flex flex-col gap-10 md:max-w-2xl lg:max-w-3xl xl:max-w-5xl m-auto px-5 pt-10"
		>
			<h1 class="cabinetGrotesk-black text-4xl text-left md:text-center text-[#0f172a] md:ml-0"
				>
					<strong><em>Breve Historia de Express.js</em></strong>
				</h1>
			<p class="interFont text-lg">
				<strong>Express.js</strong> fue creado por <strong
					>TJ Holowaychuk</strong
				> y se lanzó por primera vez en <strong>2010</strong>.
				Holowaychuk buscaba un marco minimalista y flexible que
				permitiera construir aplicaciones web de manera rápida y sin
				imponer demasiadas restricciones.
			</p>
			<h2 class="cabinetGrotesk-black text-[#0f172a] text-2xl">
				<strong
					>Empresa desarrolladora:</strong
				>
			</h2>
			<p class="interFont text-lg">
				 Inicialmente, <strong>Express.js</strong> no estaba respaldado
				por una empresa específica. <strong>TJ Holowaychuk</strong> y
				otros desarrolladores contribuyeron al proyecto de manera
				independiente. A medida que creció en popularidad, se convirtió
				en un proyecto de código abierto con una comunidad activa de
				desarrolladores.
			</p>
			<h2 class="cabinetGrotesk-black text-[#0f172a] text-2xl">
				<strong
					>Mantenimiento actual:</strong
				>
			</h2>
			<p class="interFont text-lg">
				 En la actualidad, <strong>Express.js</strong> es mantenido por
				la comunidad de desarrolladores de código abierto. No está
				vinculado a una empresa específica, lo que resalta su naturaleza
				comunitaria y su flexibilidad para adaptarse a las
				contribuciones de desarrolladores individuales.
			</p>
			<h2 class="cabinetGrotesk-black text-[#0f172a] text-2xl">
				<strong
					>Aspectos técnicos:</strong
				>
			</h2>
			<ul class="list-disc list-inside text-lg flex flex-col gap-5">
				<li>
					<strong>Rutas (Routing):</strong>
					<strong>Express.js</strong> facilita la definición de rutas
					para manejar solicitudes HTTP. Permite la creación de rutas
					específicas para diferentes métodos HTTP (GET, POST, etc.) y
					parámetros dinámicos.
				</li>
				<li>
					<strong>Generator:</strong>
					<strong>Express.js</strong> en sus versiones anteriores
					soportaba generadores, que son funciones especiales de
					JavaScript utilizadas para facilitar el manejo de
					operaciones asíncronas. Sin embargo, este enfoque ha sido
					reemplazado en gran medida por promesas y async/await en
					versiones más recientes de JavaScript y <strong
						>Express</strong
					>.
				</li>
				<li>
					<strong>RunKit:</strong>
					<strong>RunKit</strong> no está directamente relacionado con
					<strong>Express.js</strong>, pero es una herramienta en
					línea que permite probar y documentar código <strong
						>Node.js</strong
					>. Es útil para experimentar con código <strong
						>Node.js</strong
					> y compartirlo de manera interactiva.
				</li>
			</ul>
			<p class="interFont text-lg">
				<strong>Express.js</strong> sigue siendo una opción popular para
				el desarrollo web debido a su simplicidad y flexibilidad. Es
				ampliamente utilizado para la creación de APIs y aplicaciones
				web rápidas y eficientes en <strong>Node.js</strong>.
			</p>
		</article>
	</main>
</Layout>

<style>
	#imgNode {
        transition: transform 0.4s ease-in-out;
    }

    #imgNode:hover {
        cursor: pointer;
        transform: scale(1.1);
    }

	 #imgExpress {
        transition: transform 0.4s ease-in-out;
    }

    #imgExpress:hover {
        cursor: pointer;
        transform: scale(1.1);
    }

    
</style>
